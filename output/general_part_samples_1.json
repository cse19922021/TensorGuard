{
    "<ArgType.INT: 1>": {
        "Integer arguments that are negative": [
            "    \"Sample 1\": \"-1\",",
            "    \"Sample 2\": \"-2\",",
            "    \"Sample 3\": \"-3\",",
            "    \"Sample 4\": \"-4\",",
            "    \"Sample 5\": \"-5\""
        ],
        "Integer arguments that are zero": [
            "    \"Sample 1\": 0,",
            "    \"Sample 2\": -1,",
            "    \"Sample 3\": 1,",
            "    \"Sample 4\": -100,",
            "    \"Sample 5\": 100"
        ],
        "Integer arguments that are large": [
            "  \"Sample 1\": \"38756473859\",",
            "  \"Sample 2\": \"9837459238732\",",
            "  \"Sample 3\": \"78456982356783465834958\""
        ],
        "Integer arguments that are negative and large": [
            "    \"Sample 1\": \"-1\",",
            "    \"Sample 2\": \"-2\",",
            "    \"Sample 3\": \"-100\",",
            "    \"Sample 4\": \"-1000\""
        ],
        "Empty Integer arguments": [
            "    \"Sample 1\": \"null\",",
            "    \"Sample 2\": \"NaN\",",
            "    \"Sample 3\": \"undefined\",",
            "    \"Sample 4\": \"Infinity\",",
            "    \"Sample 5\": \"-Infinity\",",
            "    \"Sample 6\": \"true\",",
            "    \"Sample 7\": \"false\",",
            "    \"Sample 8\": \"NaN.toString()\",",
            "    \"Sample 9\": \"undefined.toString()\",",
            "    \"Sample 10\": \"Infinity.toString()\",",
            "    \"Sample 11\": \"-Infinity.toString()\",",
            "    \"Sample 12\": \"true.toString()\",",
            "    \"Sample 13\": \"false.toString()\",",
            "    \"Sample 14\": \"null.toString()\",",
            "    \"Sample 15\": \"\\\"\\\"\",",
            "    \"Sample 16\": \"\\\"NaN\\\"\",",
            "    \"Sample 17\": \"\\\"undefined\\\"\",",
            "    \"Sample 18\": \"\\\"Infinity\\\"\",",
            "    \"Sample 19\": \"\\\"-Infinity\\\"\",",
            "    \"Sample 20\": \"\\\"true\\\"\",",
            "    \"Sample 21\": \"\\\"false\\\"\""
        ]
    }
},
{
    "<ArgType.FLOAT: 3>": {
        "Float arguments that are negative": [
            "  \"Sample 1\": -1.0,",
            "  \"Sample 2\": -2.0,",
            "  \"Sample 3\": -3.0,",
            "  \"Sample 4\": -4.0,",
            "  \"Sample 5\": -5.0,",
            "  \"Sample 6\": -6.0,",
            "  \"Sample 7\": -7.0,",
            "  \"Sample 8\": -8.0,",
            "  \"Sample 9\": -9.0,",
            "  \"Sample 10\": -10.0"
        ],
        "Float arguments that are zero": [
            "    \"Sample 1\": \"0.0\",",
            "    \"Sample 2\": \"-0.0\",",
            "    \"Sample 3\": \"0.0000001\",",
            "    \"Sample 4\": \"-0.0000001\",",
            "    \"Sample 5\": \"inf\",",
            "    \"Sample 6\": \"-inf\",",
            "    \"Sample 7\": \"nan\""
        ],
        "Float arguments that are large": [
            "    \"Sample 1\": \"3.4028235e+38\",",
            "    \"Sample 2\": \"3.4028235e+38\",",
            "    \"Sample 3\": \"3.4028235e+38\",",
            "    \"Sample 4\": \"3.4028235e+38\",",
            "    \"Sample 5\": \"3.4028235e+38\",",
            "    \"Sample 6\": \"3.4028235e+38\",",
            "    \"Sample 7\": \"3.4028235e+38\",",
            "    \"Sample 8\": \"3.4028235e+38\",",
            "    \"Sample 9\": \"3.4028235e+38\",",
            "    \"Sample 10\": \"3.4028235e+38\""
        ],
        "Float arguments that are negative and large": [
            "    \"Sample 1\": \"-100000.0\",",
            "    \"Sample 2\": \"-99999.9\",",
            "    \"Sample 3\": \"-99999.8\",",
            "    \"Sample 4\": \"-99999.7\",",
            "    \"Sample 5\": \"-99999.6\",",
            "    \"Sample 6\": \"-99999.5\",",
            "    \"Sample 7\": \"-99999.4\",",
            "    \"Sample 8\": \"-99999.3\",",
            "    \"Sample 9\": \"-99999.2\",",
            "    \"Sample 10\": \"-99999.1\""
        ],
        "Empty float arguments": [
            "    \"Sample 1\": \"0.0\",",
            "    \"Sample 2\": \"-1.0\",",
            "    \"Sample 3\": \"1.0\",",
            "    \"Sample 4\": \"NaN\",",
            "    \"Sample 5\": \"Infinity\",",
            "    \"Sample 6\": \"-Infinity\""
        ]
    }
},
{
    "<ArgType.STR: 2>": {
        "Invalid string": [
            "    \"Sample 1\":\"<script>alert('XSS attack')</script>\",",
            "    \"Sample 2\":\"<img src='http://malicioussite.com/malware.jpg'>\",",
            "    \"Sample 3\":\"<a href='http://malicioussite.com'>Click here</a>\",",
            "    \"Sample 4\":\"<script src='http://malicioussite.com/malware.js'></script>\",",
            "    \"Sample 5\":\"<iframe src='http://malicioussite.com/malware.html'></iframe>\""
        ],
        "Empty string": [
            "    \"Sample 1\":\"\",",
            "    \"Sample 2\":\"<script>alert('XSS');</script>\",",
            "    \"Sample 3\":\"<img src='https://maliciouswebsite.com/malware.jpg'>\",",
            "    \"Sample 4\":\"<iframe src='https://maliciouswebsite.com/malware.html'></iframe>\",",
            "    \"Sample 5\":\"<a href='https://maliciouswebsite.com/malware.exe'>Download Now</a>\",",
            "    \"Sample 6\":\"<svg onload='javascript:alert('XSS');'></svg>\",",
            "    \"Sample 7\":\"<input type='text' onblur='javascript:alert('XSS');'>\",",
            "    \"Sample 8\":\"<script>console.log('This is a malicious script');</script>\",",
            "    \"Sample 9\":\"<script src='https://maliciouswebsite.com/malware.js'></script>\",",
            "    \"Sample 10\":\"<img src='x' onerror='alert(1)'>\""
        ]
    }
},
{
    "<ArgType.LIST: 6>": {
        "A list with large elements": [
            "    \"Sample 1\": \"[1, 2147483648, 3, 4]\",",
            "    \"Sample 2\": \"[5, -2147483649, 7, 8]\",",
            "    \"Sample 3\": \"[9, 10, 11, 2147483649]\",",
            "    \"Sample 4\": \"[2147483649, 12, 13, 14]\",",
            "    \"Sample 5\": \"[-2147483649, 16, 17, 18]\",",
            "    \"Sample 6\": \"[19, 20, -2147483649, 22]\""
        ],
        "A list with zero elements": [
            "    \"Sample 1\": [],",
            "    \"Sample 2\": [],",
            "    \"Sample 3\": [],",
            "    \"Sample 4\": [],",
            "    \"Sample 5\": []"
        ],
        "A list with negative elements": [
            "    \"Sample 1\":[-1],",
            "    \"Sample 2\":[-2],",
            "    \"Sample 3\":[-3],",
            "    \"Sample 4\":[-4],",
            "    \"Sample 5\":[-5],",
            "    \"Sample 6\":[-6],",
            "    \"Sample 7\":[-7],",
            "    \"Sample 8\":[-8],",
            "    \"Sample 9\":[-9],",
            "    \"Sample 10\":[-10],",
            "    \"Sample 11\":[-11],",
            "    \"Sample 12\":[-12],",
            "    \"Sample 13\":[-13],",
            "    \"Sample 14\":[-14],",
            "    \"Sample 15\":[-15],",
            "    \"Sample 16\":[-16],",
            "    \"Sample 17\":[-17],",
            "    \"Sample 18\":[-18],",
            "    \"Sample 19\":[-19],",
            "    \"Sample 20\":[-20]"
        ],
        "An empty list": [
            "    \"Sample 1\": [],",
            "    \"Sample 2\": [[]],",
            "    \"Sample 3\": [[[]]],",
            "    \"Sample 4\": [[[]], [[]]],",
            "    \"Sample 5\": [1, 2, 3],",
            "    \"Sample 6\": [[\"a\", \"b\", \"c\"]],",
            "    \"Sample 7\": [[1, 2, 3], [\"a\", \"b\", \"c\"]],",
            "    \"Sample 8\": [[1, 2, 3], [\"a\", \"b\", \"c\"], []],",
            "    \"Sample 9\": [],",
            "    \"Sample 10\": [],",
            "    \"Sample 11\": [, ],",
            "    \"Sample 12\": [, , ]"
        ],
        "A list that contains invalid string values": [
            "\"Sample 1\":\"[1, 2, 3, '4', 5]\",\"Sample 2\":\"[1.5, true, 'hello', [1, 2, 3]]\",\"Sample 3\":\"[]\",\"Sample 4\":\"[1, 2, None, 5]\""
        ],
        "A list with nan elements": [
            "    \"Sample 1\": [float(\"nan\"), float(\"nan\"), float(\"nan\")],",
            "    \"Sample 2\": [float(\"nan\"), float(\"nan\"), float(\"nan\"), float(\"nan\")],",
            "    \"Sample 3\": [float(\"nan\")],",
            "    \"Sample 4\": [float(\"nan\"), float(\"nan\")],",
            "    \"Sample 5\": [float(\"nan\"), float(\"nan\"), float(\"nan\"), float(\"nan\"), float(\"nan\")]"
        ],
        "A list with None elements": [
            "\"Sample 1\": \"[]\", \"Sample 2\": \"[None]\", \"Sample 3\": \"[None, None]\", \"Sample 4\": \"[None, None, None]\", \"Sample 5\": \"[None, None, None, None]\", \"Sample 6\": \"[None, None, None, None, None]\", \"Sample 7\": \"[None, None, None, None, None, None]\", \"Sample 8\": \"[..."
        ],
        "An invalid python list": [
            "    \"Sample 1\": [1, 2, 3, \"4\"],",
            "    \"Sample 2\": \"hello\",",
            "    \"Sample 3\": \"key\": \"value\",",
            "    \"Sample 4\": (1, 2, 3),",
            "    \"Sample 5\": 123,",
            "    \"Sample 6\": None,",
            "    \"Sample 7\": 1.23,",
            "    \"Sample 8\": 1: \"one\", 2: \"two\", 3: \"three\",",
            "    \"Sample 9\": \"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\",",
            "    \"Sample 10\": [1, 2, 3, [4, 5, 6]],",
            "    \"Sample 11\": [[1, 2, 3], [4, 5, 6]],",
            "    \"Sample 12\": [1, 2, \"key\": \"value\"],",
            "    \"Sample 13\": \"key\": [1, 2, 3],",
            "    \"Sample 14\": \"key\": (1, 2, 3),",
            "    \"Sample 15\": \"key\": \"nested_key\": \"nested_value\",",
            "    \"Sample 16\": ([1, 2, 3], [4, 5, 6]),",
            "    \"Sample 17\": \"key\": \"value\", \"key2\": [1, 2, 3],",
            "    \"Sample 18\": \"key\": \"value\", \"key2\": (1, 2, 3),",
            "    \"Sample 19\": \"key1\": \"value1\", \"key2\": \"value2\", \"key3\": [1, 2, 3],",
            "    \"Sample 20\": \"key1\": \"value1\", \"key2\": \"value2\", \"key3\": (1, 2, 3)"
        ]
    }
},
{
    "<ArgType.TUPLE: 5>": {
        "A tuple with large elements": [
            "    \"Sample 1\": \"([99999999999999, 88888888888888, 77777777777777, 66666666666666, 55555555555555, 44444444444444, 33333333333333, 22222222222222, 11111111111111, 0])\",",
            "    \"Sample 2\": \"([11111111111111, 22222222222222, 33333333333333, 44444444444444, 55555555555555, 66666666666666, 77777777777777, 88888888888888, 99999999999999, 0])\",",
            "    \"Sample 3\": \"([99999999999999, 88888888888888, 77777777777777, 66666666666666, 55555555555555, 44444444444444, 33333333333333, 22222222222222, 11111111111111])\",",
            "    \"Sample 4\": \"([11111111111111, 22222222222222, 33333333333333, 44444444444444, 55555555555555, 66666666666666, 77777777777777, 88888888888888, 99999999999999])\",",
            "    \"Sample 5\": \"([99999999999999, 88888888888888, 77777777777777, 66666666666666, 55555555555555, 44444444444444, 33333333333333, 22222222222222])\""
        ],
        "A tuple with zero elements": [
            "\"Sample 1\":\"\""
        ],
        "A tuple with negative elements": [
            "    \"Sample 1\": \"((-1, -2, -3),)\",",
            "    \"Sample 2\": \"((-1, -1, -1),)\",",
            "    \"Sample 3\": \"((-999, -888, -777),)\",",
            "    \"Sample 4\": \"((-5, -10, -15),)\""
        ],
        "An empty tuple": [
            "    \"Sample 1\": \"\",",
            "    \"Sample 2\": \"\",",
            "    \"Sample 3\": \"\""
        ],
        "A tuple that contains invalid string values": [
            "    \"Sample 1\": \"['abc', 'def', 'ghi']\",",
            "    \"Sample 2\": \"['123', '456', '789']\",",
            "    \"Sample 3\": \"['', '', '']\""
        ],
        "A tuple with nan elements": [
            "  \"Sample 1\": [nan, nan, nan],",
            "  \"Sample 2\": [nan, nan, nan, nan],",
            "  \"Sample 3\": [nan, nan, nan, nan, nan],",
            "  \"Sample 4\": [nan, nan, nan, nan, nan, nan],",
            "  \"Sample 5\": [nan, nan, nan, nan, nan, nan, nan],",
            "  \"Sample 6\": [nan, nan, nan, nan, nan, nan, nan, nan],",
            "  \"Sample 7\": [nan, nan, nan, nan, nan, nan, nan, nan, nan]"
        ],
        "A tuple with None elements": [
            "  \"Sample 1\": null,",
            "  \"Sample 2\": null,",
            "  \"Sample 3\": null"
        ],
        "An invalid python tuple": [
            "    \"Sample 1\": \"(1, 2, 3)\",",
            "    \"Sample 2\": \"(1,)\",",
            "    \"Sample 3\": \"()\""
        ]
    }
},
{
    "<ArgType.TENSOR: 9>": {
        "Input tensor that is not scalars": [
            " \"Sample 1\": \"Sample 1\", \"Sample 2\": \"Sample 2\", \"Sample 3\": \"Sample 3\" "
        ],
        "large input tensors": [
            "    \"Sample 1\":\"\\\"Sample 1\\\"\",",
            "    \"Sample 2\":\"\\\"Sample 2\\\"\",",
            "    \"Sample 3\":\"\\\"Sample 3\\\"\""
        ],
        "negative input tensors": [
            "    \"Sample 1\": \"tf.constant([-1, -2, -3, -4])\",",
            "    \"Sample 2\": \"tf.constant([0, 0, 0, 0])\",",
            "    \"Sample 3\": \"tf.constant([False, False, False, False])\",",
            "    \"Sample 4\": \"tf.constant('malicious_string_input')\",",
            "    \"Sample 5\": \"tf.zeros([1, 2, 3, 4])\""
        ],
        "scalar input tensors": [
            "    \"Sample 1\": \"null\",",
            "    \"Sample 2\": \"NaN\",",
            "    \"Sample 3\": \"Infinity\",",
            "    \"Sample 4\": \"-Infinity\",",
            "    \"Sample 5\": \"undefined\""
        ],
        "tensors with nan values": [
            "    \"Sample 1\": \"tf.convert_to_tensor(np.array([np.nan]))\",",
            "    \"Sample 2\": \"tf.convert_to_tensor(np.array([[np.nan, 1.0], [2.0, 3.0]]))\",",
            "    \"Sample 3\": \"tf.convert_to_tensor(np.array([1.0, np.nan]))\",",
            "    \"Sample 4\": \"tf.convert_to_tensor(np.array([[1.0, 2.0], [np.nan, 3.0]]))\",",
            "    \"Sample 5\": \"tf.convert_to_tensor(np.array([[1.0, np.nan], [2.0, 3.0]]))\",",
            "    \"Sample 6\": \"tf.convert_to_tensor(np.full((3, 3), np.nan))\",",
            "    \"Sample 7\": \"tf.constant(np.array([np.nan]))\",",
            "    \"Sample 8\": \"tf.constant(np.array([[np.nan, 1.0], [2.0, 3.0]]))\",",
            "    \"Sample 9\": \"tf.constant(np.array([1.0, np.nan]))\",",
            "    \"Sample 10\": \"tf.constant(np.array([[1.0, 2.0], [np.nan, 3.0]]))\",",
            "    \"Sample 11\": \"tf.constant(np.array([[1.0, np.nan], [2.0, 3.0]]))\",",
            "    \"Sample 12\": \"tf.constant(np.full((3, 3), np.nan))\",",
            "    \"Sample 13\": \"tf.Variable(np.array([np.nan]))\",",
            "    \"Sample 14\": \"tf.Variable(np.array([[np.nan, 1.0], [2.0, 3.0]]))\",",
            "    \"Sample 15\": \"tf.Variable(np.array([1.0, np.nan]))\",",
            "    \"Sample 16\": \"tf.Variable(np.array([[1.0, 2.0], [np.nan, 3.0]]))\",",
            "    \"Sample 17\": \"tf.Variable(np.array([[1.0, np.nan], [2.0, 3.0]]))\",",
            "    \"Sample 18\": \"tf.Variable(np.full((3, 3), np.nan))\""
        ],
        "zero input tensors": [
            "\\",
            "    \"Sample 1\": \"Sample 1\",",
            "    \"Sample 2\": \"Sample 2\",",
            "    \"Sample 3\": \"Sample 3\",",
            "    \"Sample 4\": \"Sample 4\",",
            "    \"Sample 5\": \"Sample 5\""
        ],
        "empty input tensors": [
            "    \"Sample 1\": \"tf.constant([])\",",
            "    \"Sample 2\": \"tf.convert_to_tensor([])\",",
            "    \"Sample 3\": \"tf.Variable([])\",",
            "    \"Sample 4\": \"tf.zeros([])\",",
            "    \"Sample 5\": \"tf.ones([])\",",
            "    \"Sample 6\": \"tf.fill([], 1)\",",
            "    \"Sample 7\": \"tf.constant_shape([])\",",
            "    \"Sample 8\": \"tf.Tensor([])\",",
        ]
    }
},
